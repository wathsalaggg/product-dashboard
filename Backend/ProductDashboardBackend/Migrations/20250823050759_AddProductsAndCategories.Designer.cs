// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductDashboardBackend.Data;

#nullable disable

namespace ProductDashboardBackend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250823050759_AddProductsAndCategories")]
    partial class AddProductsAndCategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ProductDashboardBackend.Models.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Delicious main dishes",
                            IconName = "🍛",
                            Name = "Main Course"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Sweet treats",
                            IconName = "🍰",
                            Name = "Desserts"
                        });
                });

            modelBuilder.Entity("ProductDashboardBackend.Models.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<double>("Rating")
                        .HasColumnType("double");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Domino's",
                            CategoryId = 1,
                            Description = "Cheesy pizza",
                            ImageUrl = "pizza.jpg",
                            Name = "Pizza",
                            Price = 12.5m,
                            Rating = 4.5,
                            StockQuantity = 10
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Bakery",
                            CategoryId = 2,
                            Description = "Rich chocolate cake",
                            ImageUrl = "cake.jpg",
                            Name = "Chocolate Cake",
                            Price = 6.0m,
                            Rating = 4.7999999999999998,
                            StockQuantity = 5
                        });
                });

            modelBuilder.Entity("ProductDashboardBackend.Models.Entities.Product", b =>
                {
                    b.HasOne("ProductDashboardBackend.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProductDashboardBackend.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
