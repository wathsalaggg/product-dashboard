@model ProductDashboard.Models.Product

<div class="col-xl-3 col-lg-4 col-md-6 mb-4">
    <div class="card h-100 shadow-sm border-0" style="border-radius: 12px; overflow: hidden; transition: transform 0.3s ease, box-shadow 0.3s ease;">
        <div class="card-img-container position-relative">
            <img src="@(string.IsNullOrEmpty(Model.ImageUrl) ? "/images/placeholder-food.jpg" : Model.ImageUrl)"
                 class="card-img-top" alt="@Model.Name"
                 style="height: 200px; object-fit: cover;" loading="lazy">
            @if (!Model.InStock)
            {
                <div class="position-absolute top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center" style="background: rgba(44, 62, 80, 0.85);">
                    <span class="badge rounded-pill px-3 py-2" style="background-color: #E74C3C; font-size: 0.9rem;">
                        <i class="ri-close-circle-fill me-1"></i>Sold Out
                    </span>
                </div>
            }
            <!-- Favorite Heart Icon -->
            <button class="btn btn-sm position-absolute top-0 end-0 m-2 p-0" style="background: rgba(236, 240, 241, 0.9); border-radius: 50%; width: 32px; height: 32px;">
                <i class="ri-heart-line" style="color: #E67E22; font-size: 1.1rem;"></i>
            </button>
        </div>

        <div class="card-body d-flex flex-column" style="background: linear-gradient(to bottom, #FFFFFF, #FDF6E3);">
            <!-- Title and Category -->
            <div class="d-flex justify-content-between align-items-start mb-2">
                <h5 class="card-title mb-0 product-name" style="font-family: 'Playfair Display', serif; color: #2C3E50;">
                    @Model.Name
                </h5>
                <span class="badge rounded-pill px-2 product-category" style="background-color: #E67E22; color: #2C3E50; font-size: 0.75rem;">
                    @Model.Category?.Name
                </span>
            </div>

            <!-- Description -->
            <p class="card-text flex-grow-1 mb-3 product-description" style="color: #34495E; font-size: 0.9rem; line-height: 1.4;">
                @Model.Description
            </p>

            <!-- Price -->
            <div class="mb-3">
                <span class="h4 mb-0" style="font-family: 'Playfair Display', serif; color: #2C3E50;">
                    LKR @Model.Price.ToString("N2")
                </span>
                <small class="text-muted ms-1" style="color: #7F8C8D !important;">per serving</small>
            </div>

            <!-- Action Buttons -->
            <div class="card-actions mt-auto">
                <div class="d-grid gap-2">
                    <button class="btn btn-sm view-details-btn" data-product-id="@Model.Id"
                            data-product-name="@Model.Name"
                            data-product-description="@Model.Description"
                            data-product-price="@Model.Price.ToString("N2")"
                            data-product-category="@Model.Category?.Name"
                            data-product-image="@(string.IsNullOrEmpty(Model.ImageUrl) ? "/images/placeholder-food.jpg" : Model.ImageUrl)"
                            data-product-instock="@Model.InStock"
                            style="background-color: #2C3E50; color: #ECF0F1; border: none;">
                        <i class="ri-eye-line me-1"></i>View Details
                    </button>

                    @if (Model.InStock)
                    {
                        <button class="btn btn-sm add-to-cart-btn" data-product-id="@Model.Id"
                                style="background-color: #27AE60; color: white; border: none;">
                            <i class="ri-shopping-cart-line me-1"></i>Add to Order
                        </button>
                    }
                    else
                    {
                        <button class="btn btn-sm" disabled
                                style="background-color: #BDC3C7; color: #2C3E50; border: none;">
                            <i class="ri-close-circle-line me-1"></i>Currently Unavailable
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Product Details Modal -->
<div class="modal fade" id="productDetailsModal" tabindex="-1" aria-labelledby="productDetailsModalLabel" aria-hidden="true" data-bs-backdrop="false">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" style="max-width: 700px;">
        <div class="modal-content" style="border-radius: 12px; overflow: hidden; border: 2px solid #E67E22; box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);">
            <div class="modal-header" style="background: linear-gradient(to right, #2C3E50, #34495E); color: #ECF0F1; border: none;">
                <h5 class="modal-title" id="productDetailsModalLabel" style="font-family: 'Playfair Display', serif;">
                    <i class="ri-restaurant-2-line me-2"></i>Product Details
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-0">
                <div class="row g-0">
                    <div class="col-md-5 position-relative">
                        <img id="modalProductImage" src="" class="img-fluid" alt="Product Image" style="height: 100%; min-height: 300px; object-fit: cover;">
                        <button id="downloadImageBtn" class="btn position-absolute top-0 end-0 m-2"
                                style="background: rgba(236, 240, 241, 0.9); border-radius: 50%; width: 40px; height: 40px;"
                                title="Download Image">
                            <i class="ri-download-line" style="color: #2C3E50;"></i>
                        </button>
                    </div>
                    <div class="col-md-7">
                        <div class="p-3">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <h4 id="modalProductName" style="font-family: 'Playfair Display', serif; color: #2C3E50;"></h4>
                                <span id="modalProductCategory" class="badge rounded-pill px-2 py-1"
                                      style="background-color: #E67E22; color: #2C3E50; font-size: 0.7rem;"></span>
                            </div>

                            <hr style="border-color: #ECF0F1; margin: 0.5rem 0;">

                            <p id="modalProductDescription" class="mb-3" style="color: #34495E; line-height: 1.5; font-size: 0.9rem;"></p>

                            <div class="mb-3">
                                <h4 id="modalProductPrice" style="font-family: 'Playfair Display', serif; color: #2C3E50; margin-bottom: 0.2rem;"></h4>
                                <small class="text-muted" style="color: #7F8C8D !important;">per serving</small>
                            </div>

                            <div id="modalStockStatus" class="mb-3">
                                <!-- Stock status will be inserted here -->
                            </div>

                            <div class="d-grid gap-2">
                                <button class="btn add-to-cart-modal-btn py-2" style="background-color: #27AE60; color: white; border: none;">
                                    <i class="ri-shopping-cart-line me-2"></i>Add to Order
                                </button>
                                <button class="btn py-2" style="background-color: #2C3E50; color: #ECF0F1; border: none;" data-bs-dismiss="modal">
                                    <i class="ri-close-line me-2"></i>Close
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add this CSS for hover effects and search highlighting -->
<style>
    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15) !important;
    }

    .view-details-btn:hover {
        background-color: #34495E !important;
        color: #DAA520 !important;
    }

    .add-to-cart-btn:hover {
        background-color: #219653 !important;
        transform: scale(1.02);
    }

    .card-img-container .btn:hover {
        background: #ECF0F1 !important;
    }

        .card-img-container .btn:hover i {
            color: #E67E22 !important;
        }

    /* Search term highlighting */
    .search-highlight {
        background-color: #FFE066;
        color: #2C3E50;
        padding: 0 2px;
        border-radius: 3px;
        font-weight: 600;
        box-shadow: 0 1px 3px rgba(0,0,0,0.2);
        animation: highlightPulse 1.5s ease-in-out;
    }

    @@keyframes highlightPulse {
        0% {
            background-color: #FFD43B;
            box-shadow: 0 0 0 0 rgba(255, 212, 59, 0.7);
        }

        70% {
            box-shadow: 0 0 0 10px rgba(255, 212, 59, 0);
        }

        100% {
            background-color: #FFE066;
            box-shadow: 0 0 0 0 rgba(255, 212, 59, 0);
        }
    }

    /* Ensure text doesn't break with highlights */
    .product-name, .product-description, .product-category {
        overflow-wrap: break-word;
    }

    /* Modal styles */
    .modal-content {
        border: none;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
    }

    #downloadImageBtn:hover {
        background: #ECF0F1 !important;
        transform: scale(1.1);
        transition: all 0.3s ease;
    }

    .add-to-cart-modal-btn:hover {
        background-color: #219653 !important;
        transform: translateY(-2px);
        transition: all 0.3s ease;
    }

    /* Fix for modal backdrop */
    .modal-backdrop {
        background-color: rgba(44, 62, 80, 0.5) !important;
    }

    /* Make modal more compact */
    .modal-dialog {
        max-width: 700px;
    }

    .modal-body {
        max-height: 70vh;
        overflow-y: auto;
    }
</style>

<script>
    // Function to show product details modal
    function showProductDetails(productData) {
        // Populate modal with product data
        $('#modalProductName').text(productData.name);
        $('#modalProductDescription').text(productData.description);
        $('#modalProductPrice').text('LKR ' + productData.price);
        $('#modalProductCategory').text(productData.category);
        $('#modalProductImage').attr('src', productData.image);

        // Set product ID for add to cart button
        $('.add-to-cart-modal-btn').data('product-id', productData.id);

        // Update stock status
        const stockStatusHtml = productData.inStock
            ? '<div class="alert alert-success mb-0 py-2"><i class="ri-checkbox-circle-fill me-2"></i>In Stock - Ready to order!</div>'
            : '<div class="alert alert-danger mb-0 py-2"><i class="ri-close-circle-fill me-2"></i>Currently Out of Stock</div>';
        $('#modalStockStatus').html(stockStatusHtml);

        // Enable/disable add to cart button
        if (productData.inStock) {
            $('.add-to-cart-modal-btn').prop('disabled', false).show();
        } else {
            $('.add-to-cart-modal-btn').prop('disabled', true).hide();
        }

        // Show the modal with a custom backdrop
        const modalElement = document.getElementById('productDetailsModal');
        const modal = new bootstrap.Modal(modalElement, {
            backdrop: true,
            keyboard: true
        });
        modal.show();
    }

    // Function to download product image
    function downloadProductImage(imageUrl, productName) {
        // Create a temporary anchor element
        const link = document.createElement('a');
        link.href = imageUrl;

        // Set the download attribute with a proper filename
        link.download = `${productName.replace(/\s+/g, '_').toLowerCase()}.jpg`;

        // Append to body, click, and remove
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    }

    // Document ready function
    $(document).ready(function() {
        // Handle view details button click
        $(document).on('click', '.view-details-btn', function() {
            const productData = {
                id: $(this).data('product-id'),
                name: $(this).data('product-name'),
                description: $(this).data('product-description'),
                price: $(this).data('product-price'),
                category: $(this).data('product-category'),
                image: $(this).data('product-image'),
                inStock: $(this).data('product-instock') === 'True'
            };

            showProductDetails(productData);
        });

        // Handle download image button click
        $(document).on('click', '#downloadImageBtn', function() {
            const imageUrl = $('#modalProductImage').attr('src');
            const productName = $('#modalProductName').text();
            downloadProductImage(imageUrl, productName);

            // Show download confirmation
            const toast = $(`
                <div class="toast align-items-center text-white bg-success border-0 position-fixed bottom-0 end-0 m-3" role="alert">
                    <div class="d-flex">
                        <div class="toast-body">
                            <i class="ri-download-line me-2"></i> Image download started
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                    </div>
                </div>
            `);

            $('body').append(toast);
            new bootstrap.Toast(toast[0]).show();

            // Remove toast after animation
            setTimeout(() => toast.remove(), 3000);
        });

        // Handle add to cart from modal
        $(document).on('click', '.add-to-cart-modal-btn', function() {
            const productId = $(this).data('product-id');
            addToCart(productId);

            // Close the modal
            const modal = bootstrap.Modal.getInstance(document.getElementById('productDetailsModal'));
            modal.hide();
        });

        // Handle modal hidden event to ensure proper cleanup
        $('#productDetailsModal').on('hidden.bs.modal', function () {
            // Remove any backdrop that might remain
            $('.modal-backdrop').remove();
            // Ensure body doesn't have modal-open class
            $('body').removeClass('modal-open');
            // Reset overflow
            $('body').css('overflow', '');
            $('body').css('padding-right', '');
        });
    });

    // Add to cart function
    function addToCart(productId) {
        // Implement your cart functionality here
        console.log(`Adding product ${productId} to cart`);

        // Update cart count
        const currentCount = parseInt($('#cartCount').text()) || 0;
        $('#cartCount').text(currentCount + 1);

        // Show notification
        const toast = $(`
            <div class="toast align-items-center text-white bg-success border-0 position-fixed bottom-0 end-0 m-3" role="alert">
                <div class="d-flex">
                    <div class="toast-body">
                        <i class="ri-checkbox-circle-fill"></i> Product added to cart
                    </div>
                    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                </div>
            </div>
        `);

        $('body').append(toast);
        new bootstrap.Toast(toast[0]).show();

        // Remove toast after animation
        setTimeout(() => toast.remove(), 3000);
    }
</script>